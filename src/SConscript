
Import( 'env' )

conf = Configure(env)
if not conf.CheckLibWithHeader('sndfile', 'sndfile.h', 'c'):
    print 'Did not find libsndfile.a or sndfile.lib, exiting!'
    Exit(1)
env = conf.Finish()

loudnessAnalyserLib = env.SharedLibrary(
        'loudnessAnalyser',
        Glob( 'loudnessAnalyser/*.cpp' ),
        )


loudnessAnalyserLibStatic = env.StaticLibrary(
        'loudnessAnalyser',
        Glob( 'loudnessAnalyser/*.cpp' ),
        )

loudnessCorrectorsLib = env.SharedLibrary(
        'loudnessCorrectors',
        Glob( 'loudnessCorrectors/*.cpp' ),
        )

loudnessCorrectorsLibStatic = env.StaticLibrary(
        'loudnessCorrectors',
        Glob( 'loudnessCorrectors/*.cpp' ),
        )

loudnessToolsLib = env.SharedLibrary(
        'loudnessTools',
        Glob( 'tool/*/*.cpp' ),
        LIBS = [
            "sndfile",
        ],
        )

loudnessToolsLibStatic = env.StaticLibrary(
        'loudnessTools',
        Glob( 'tool/*/*.cpp' ),
        LIBS = [
            "sndfile",
        ],
        )


env.Alias( 'install', env.InstallVersionedLib( 'lib', loudnessAnalyserLib ) )
env.Alias( 'install', env.Install( 'lib', loudnessAnalyserLibStatic ) )

env.Alias( 'install', env.InstallVersionedLib( 'lib', loudnessCorrectorsLib ) )
env.Alias( 'install', env.Install( 'lib', loudnessCorrectorsLibStatic ) )

env.Alias( 'install', env.InstallVersionedLib( 'lib', loudnessToolsLib ) )
env.Alias( 'install', env.Install( 'lib', loudnessToolsLibStatic ) )

Export( 'loudnessAnalyserLibStatic' )
Export( 'loudnessCorrectorsLibStatic' )
Export( 'loudnessToolsLibStatic' )
